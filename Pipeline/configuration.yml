- hosts: all
  become: true
  vars:
    ssh_user: appuser
    ssh_key_src: /home/ubuntu/.ssh/id_ed25519
    
  tasks:
    - name: Ensure {{ ssh_user }}.ssh directory exists
      file:
        path: /home/{{ ssh_user }}/.ssh
        state: directory
        owner: "{{ ssh_user }}"
        group: "{{ ssh_user }}"
        mode: '0700'

    - name: Install deploy key for GitHub
      copy:
        src: "{{ ssh_key_src }}"
        dest: /home/{{ ssh_user }}/.ssh/id_ed25519
        owner: "{{ ssh_user }}"
        group: "{{ ssh_user }}"
        mode: '0600'

    - name: Touch known_hosts file with correct permissions
      file:
        path: /home/{{ ssh_user }}/.ssh/known_hosts
        state: touch
        owner: "{{ ssh_user }}"
        group: "{{ ssh_user }}"
        mode: '0644'

    - name: Add GitHub to {{ ssh_user }} known_hosts
      known_hosts:
        path: /home/{{ ssh_user }}/.ssh/known_hosts
        name: github.com
        key: "{{ lookup('pipe','ssh-keyscan -t rsa github.com') }}"

    - name: Clone private GitHub repo as {{ ssh_user }}
      become_user: "{{ ssh_user }}"
      git:
        repo: 'git@github.com:vfe01/DE2-group-13-project.git'
        dest: /DE2_proj
        version: main
        force: yes
        key_file: /home/{{ ssh_user }}/.ssh/id_ed25519
        accept_hostkey: yes


# PLAY 2: Update code on both servers
- hosts: dev_server,prod_server
  become: true

  tasks:
    - name: Ensure the repository is up-to-date
      git:
        repo: 'git@github.com:vfe01/DE2-group-13-project.git'
        dest: /DE2_proj
        version: main
        update: yes
        key_file: /home/appuser/.ssh/git_key
      tags:
        - git

# PLAY 3: Prod – install Docker & run containers
- hosts: prod_server
  become: true

  tasks:
    - name: Install prerequisites
      apt:
        name:
          - ca-certificates
          - software-properties-common
        state: latest
        update_cache: yes

    - name: Add Docker GPG key
      apt_key:
        url: https://download.docker.com/linux/ubuntu/gpg
        state: present

    - name: Add Docker repository
      apt_repository:
        repo: 'deb [arch=amd64] https://download.docker.com/linux/ubuntu focal stable'
        state: present

    - name: Configure Docker daemon MTU
      copy:
        dest: /etc/docker/daemon.json
        content: |
          {
            "mtu": 1450
          }

    - name: Install Docker CE
      apt:
        name: docker-ce
        state: present
        update_cache: yes

# TODO: fix docker files for running the app in /DE2_proj/Production
    - name: Start Docker Compose services
      command: docker-compose up -d
      args:
        chdir: /DE2_proj/Production

# PLAY 4: Dev – install Python & ML packages
- hosts: dev_server
  become: true

  tasks:
    - name: Install python3-pip
      apt:
        name: python3-pip
        state: latest
        update_cache: yes

    - name: Install ML Python packages
      pip:
        name:
          - tensorflow==2.10.0
          - keras==2.10.0
          - 'numpy<2.0'
          - future
