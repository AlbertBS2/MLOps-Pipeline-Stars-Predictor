- hosts: all

  tasks:

    - name: Generate hosts file
      lineinfile: dest=/etc/hosts
                  regexp='.*{{ item }}$'
                  line="{{ hostvars[item].ansible_default_ipv4.address }} {{item}}"
                  state=present
      when: hostvars[item].ansible_default_ipv4.address is defined
      with_items: "{{groups['all']}}"
      become: true

    - name: apt update
      apt: update_cache=yes upgrade=dist
      become: true

   - name: Copy git .ssh key from host to target
     copy:
       src: ~/.ssh/id_ed25519
       dest: ~/.ssh/git_key
       mode: 0600
     become: true

   - name: Add host to known hosts
     known_hosts:
       path: ~/.ssh/known_hosts
       name: github.com
       key: "{{ lookup('pipe', 'ssh-keyscan github.com') }}"
     become: true

   - name: Download git repository
     become: true
     git:
      repo: 'git@github.com:vfe01/DE2-group-13-project.git'
      dest: /DE2_proj
      key_file: ~/.ssh/git_key
      update: yes
      force: yes
      
   - name: Change ownership of a directory
     become: true
     file:
      path: /DE2_proj
      state: directory
      recurse: yes
      owner: appuser
      group: appuser

  hosts: devserver,prodserver  
  tasks:
   - name: Ensure the repository is up-to-date
     become: true 
     git:
       repo: 'git@github.com:vfe01/DE2-group-13-project.git'
       dest: /DE2_proj
       update: yes
       key_file: ~/.ssh/git_key
     tags:
       - git

- hosts: prodserver
# TODO fix setup_var.yml if we need it
  vars_files:
    - setup_var.yml

  tasks:

    - name: Extra packages
      apt: pkg=python3-pip state=latest update_cache=true
      with_items:
        - ca-certificates
        - software-properties-common
      become: true

    - name: Add docker repository key
      apt_key:
        url: https://download.docker.com/linux/ubuntu/gpg
        state: present
      become: true

    - name: Add docker repository
      command: add-apt-repository -y "deb [arch=amd64] https://download.docker.com/linux/ubuntu focal stable"
      become: true

    - name: Create Ansible docker config directory
      become: true
      file:
        path: "/etc/docker"
        state: directory

    - name: Create Ansible docker file to configure Docker MTU to match SNIC for pip issue
      become: true
      copy:
        dest: "/etc/docker/daemon.json"
        content: |
          {
            "mtu": 1450
          }
    
    - name: Install docker
      apt: pkg=docker-ce state=present update_cache=true allow_unauthenticated=yes
      become: true

    - name: Run containers
      become: true
      shell: docker compose up -d
      args:
        chdir: 

- hosts: devserver

  vars_files:
    - setup_var.yml

  tasks:
    - name: Extra packages
      apt: pkg=python3-pip state=latest update_cache=true  
      become: true

    - name: Install python packages
      become: true
      pip: 
        name: tensorflow==2.10.0, keras==2.10.0, numpy<2.0, future
