- hosts: all
  become: true

  tasks:

    - name: Generate hosts file
      lineinfile: dest=/etc/hosts
                  regexp='.*{{ item }}$'
                  line="{{ hostvars[item].ansible_default_ipv4.address }} {{item}}"
                  state=present            
      when: hostvars[item].ansible_default_ipv4.address is defined
      with_items: "{{groups['all']}}"
      become: true

    - name: Install deploy key for GitHub
      copy:
        src: "/home/ubuntu/.ssh/id_ed25519"
        dest: /home/appuser/.ssh/id_ed25519
        owner: "appuser"
        group: "appuser"
        mode: '0600'
      become: true

    - name: Add GitHub to appuser known_hosts
      known_hosts:
        path: /home/appuser/.ssh/known_hosts
        name: github.com
        key: "{{ lookup('pipe','ssh-keyscan -t rsa github.com') }}"

    - name: Clone private GitHub repo as appuser
      become_user: "appuser"
      git:
        repo: 'git@github.com:vfe01/DE2-group-13-project.git'
        dest: home/appuser/DE2_proj
        version: main
        force: yes
        key_file: /home/appuser/.ssh/id_ed25519
        accept_hostkey: yes

    - name: Change ownership of a directory
      become: true
      file:
       path: home/appuser/DE2_proj
       state: directory
       recurse: yes
       owner: appuser
       group: appuser

# PLAY 2: Update code on both servers
- hosts: dev_server,prod_server
  become: true

  tasks:
    - name: Ensure the repository is up-to-date
      git:
        repo: 'git@github.com:vfe01/DE2-group-13-project.git'
        dest: /home/appuser/DE2_proj
        version: main
        update: yes
        key_file: /home/appuser/.ssh/id_ed25519
      become: true
      become_user: appuser




# PLAY 3: Prod – install Docker & run containers
- hosts: prod_server
  become: true

  tasks:
    - name: Install prerequisites
      apt:
        name:
          - ca-certificates
          - software-properties-common
        state: latest
        update_cache: yes

    - name: Add Docker GPG key
      apt_key:
        url: https://download.docker.com/linux/ubuntu/gpg
        state: present

    - name: Add Docker repository
      apt_repository:
        repo: 'deb [arch=amd64] https://download.docker.com/linux/ubuntu focal stable'
        state: present

    - name: Create Ansible docker config directory.
      become: true
      file:
        path: "/etc/docker"
        state: directory

    - name: Configure Docker daemon MTU
      copy:
        dest: /etc/docker/daemon.json
        content: |
          {
            "mtu": 1450
          }

    - name: Install Docker CE
      apt:
        name: docker-ce
        state: present
        update_cache: yes

# TODO: fix docker files for running the app in /DE2_proj/Production
#    - name: Start Docker Compose services / Run containers
#      command: docker-compose up -d
#      args:
#        chdir: home/appuser/DE2_proj/Production

# PLAY 4: Dev – install Python & ML packages
- hosts: dev_server
  become: true

  tasks:
    - name: Install python3-pip
      apt:
        name: python3-pip
        state: latest
        update_cache: yes

    - name: Install ML Python packages
      pip:
        name:
          - tensorflow==2.10.0
          - keras==2.10.0
          - 'numpy<2.0'
          - future
